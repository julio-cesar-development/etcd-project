apiVersion: v1
kind: Namespace
metadata:
  name: development

---

apiVersion: v1
kind: Secret
metadata:
  name: env-secrets
  namespace: development
  labels:
    app: etcd-app

type: Opaque
data:
  ETCD_CACHE_SECRET: TGtoYWZoa28yNUxrODJhZmdibnNOU0pPNHk4NzJHYmpza2psYTk4MjRoYWhzZmFz

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd-deployment
  namespace: development
  labels:
    app: etcd-app

spec:
  # replicas: 1

  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app: etcd-app

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 3

  template:
    metadata:
      name: etcd-app
      labels:
        app: etcd-app

    spec:
      containers:
        - name: app
          image: juliocesarmidia/etcd-app:v1.0.0

          ports:
            - containerPort: 8200
              name: etcd-app-port

          env:
            - name: ETCD_HOST
              value: "http://etcd-svc:2379"

            - name: ETCD_CACHE_SECRET
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: ETCD_CACHE_SECRET

            - name: API_PORT
              value: "8200"

          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "400m"

          livenessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: 8200
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5

          readinessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: 8200
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5

          imagePullPolicy: IfNotPresent

      restartPolicy: Always

# kubectl exec -it "$(kubectl get pod -n development | grep "etcd-deployment" | head -n 1 | cut -d' ' -f1)" -- /bin/sh -c "curl http://localhost:8200/api/v1/healthcheck"
# kubectl logs -f "$(kubectl get pod -n development | grep "etcd-deployment" | head -n 1 | cut -d' ' -f1)"

---

apiVersion: v1
kind: Service
metadata:
  name: etcd-app-svc
  namespace: development
  labels:
    app: etcd-app

spec:
  type: ClusterIP

  selector:
    app: etcd-app

  ports:
    - protocol: TCP
      port: 80
      targetPort: etcd-app-port

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: etcd-hpa
  namespace: development

spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: etcd-deployment

  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
